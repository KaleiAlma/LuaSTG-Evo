// Write by Kuanlan (Kuanlan@outlook.com)
// Minimum perfect hash function for Lua language binding.
// This source file is generated by code generator.
// Don't modify this file directly, please modify the generator configuration.

#include "lua_luastg_hash.hpp"

LuaSTG::GameObjectMember LuaSTG::MapGameObjectMember(const char* key) {
  switch(key[0]) {
    case '_':
      switch(key[1]) {
        case 'a':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::_A;
            case 'n':
              switch(key[3]) {
                case 'g':
                  switch(key[4]) {
                    case 'l':
                      switch(key[5]) {
                        case 'e':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::GameObjectMember::VANGLE;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'b':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::_B;
            case 'l':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'n':
                      switch(key[5]) {
                        case 'd':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::GameObjectMember::_BLEND;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'c':
          switch(key[2]) {
            case 'o':
              switch(key[3]) {
                case 'l':
                  switch(key[4]) {
                    case 'o':
                      switch(key[5]) {
                        case 'r':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::GameObjectMember::_COLOR;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'g':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::_G;
          }
          break;
        case 'r':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::_R;
          }
          break;
        case 's':
          switch(key[2]) {
            case 'p':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'e':
                      switch(key[5]) {
                        case 'd':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::GameObjectMember::VSPEED;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'a':
      switch(key[1]) {
        case '\0':
          return LuaSTG::GameObjectMember::A;
        case 'g':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::AG;
          }
          break;
        case 'n':
          switch(key[2]) {
            case 'i':
              switch(key[3]) {
                case '\0':
                  return LuaSTG::GameObjectMember::ANI;
              }
              break;
          }
          break;
        case 'x':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::AX;
          }
          break;
        case 'y':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::AY;
          }
          break;
      }
      break;
    case 'b':
      switch(key[1]) {
        case '\0':
          return LuaSTG::GameObjectMember::B;
        case 'o':
          switch(key[2]) {
            case 'u':
              switch(key[3]) {
                case 'n':
                  switch(key[4]) {
                    case 'd':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::BOUND;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'c':
      switch(key[1]) {
        case 'l':
          switch(key[2]) {
            case 'a':
              switch(key[3]) {
                case 's':
                  switch(key[4]) {
                    case 's':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::CLASS;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'o':
          switch(key[2]) {
            case 'l':
              switch(key[3]) {
                case 'l':
                  switch(key[4]) {
                    case 'i':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::COLLI;
                        case 'd':
                          switch(key[6]) {
                            case 'e':
                              switch(key[7]) {
                                case 'r':
                                  switch(key[8]) {
                                    case '\0':
                                      return LuaSTG::GameObjectMember::COLLIDER;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'd':
      switch(key[1]) {
        case 'x':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::DX;
          }
          break;
        case 'y':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::DY;
          }
          break;
      }
      break;
    case 'g':
      switch(key[1]) {
        case 'r':
          switch(key[2]) {
            case 'o':
              switch(key[3]) {
                case 'u':
                  switch(key[4]) {
                    case 'p':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::GROUP;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'h':
      switch(key[1]) {
        case 'i':
          switch(key[2]) {
            case 'd':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case '\0':
                      return LuaSTG::GameObjectMember::HIDE;
                  }
                  break;
              }
              break;
          }
          break;
        case 's':
          switch(key[2]) {
            case 'c':
              switch(key[3]) {
                case 'a':
                  switch(key[4]) {
                    case 'l':
                      switch(key[5]) {
                        case 'e':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::GameObjectMember::HSCALE;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'i':
      switch(key[1]) {
        case 'm':
          switch(key[2]) {
            case 'g':
              switch(key[3]) {
                case '\0':
                  return LuaSTG::GameObjectMember::IMG;
              }
              break;
          }
          break;
      }
      break;
    case 'l':
      switch(key[1]) {
        case 'a':
          switch(key[2]) {
            case 'y':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::LAYER;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'm':
      switch(key[1]) {
        case 'a':
          switch(key[2]) {
            case 'x':
              switch(key[3]) {
                case 'v':
                  switch(key[4]) {
                    case '\0':
                      return LuaSTG::GameObjectMember::MAXV;
                    case 'x':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::MAXVX;
                      }
                      break;
                    case 'y':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::MAXVY;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'n':
      switch(key[1]) {
        case 'a':
          switch(key[2]) {
            case 'v':
              switch(key[3]) {
                case 'i':
                  switch(key[4]) {
                    case '\0':
                      return LuaSTG::GameObjectMember::NAVI;
                  }
                  break;
              }
              break;
          }
          break;
        case 'o':
          switch(key[2]) {
            case 'p':
              switch(key[3]) {
                case 'a':
                  switch(key[4]) {
                    case 'u':
                      switch(key[5]) {
                        case 's':
                          switch(key[6]) {
                            case 'e':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::GameObjectMember::IGNORESUPERPAUSE;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'o':
      switch(key[1]) {
        case 'm':
          switch(key[2]) {
            case 'i':
              switch(key[3]) {
                case 'g':
                  switch(key[4]) {
                    case 'a':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::OMEGA;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'p':
      switch(key[1]) {
        case 'a':
          switch(key[2]) {
            case 'u':
              switch(key[3]) {
                case 's':
                  switch(key[4]) {
                    case 'e':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::PAUSE;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'r':
      switch(key[1]) {
        case 'c':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::RES_RC;
          }
          break;
        case 'e':
          switch(key[2]) {
            case 'c':
              switch(key[3]) {
                case 't':
                  switch(key[4]) {
                    case '\0':
                      return LuaSTG::GameObjectMember::RECT;
                  }
                  break;
              }
              break;
          }
          break;
        case 'm':
          switch(key[2]) {
            case 'o':
              switch(key[3]) {
                case 'v':
                  switch(key[4]) {
                    case 'e':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::RESOLVEMOVE;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'o':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case '\0':
                  return LuaSTG::GameObjectMember::ROT;
              }
              break;
          }
          break;
      }
      break;
    case 's':
      switch(key[1]) {
        case 't':
          switch(key[2]) {
            case 'a':
              switch(key[3]) {
                case 't':
                  switch(key[4]) {
                    case 'u':
                      switch(key[5]) {
                        case 's':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::GameObjectMember::STATUS;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 't':
      switch(key[1]) {
        case 'i':
          switch(key[2]) {
            case 'm':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::TIMER;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'v':
      switch(key[1]) {
        case 's':
          switch(key[2]) {
            case 'c':
              switch(key[3]) {
                case 'a':
                  switch(key[4]) {
                    case 'l':
                      switch(key[5]) {
                        case 'e':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::GameObjectMember::VSCALE;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'x':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::VX;
          }
          break;
        case 'y':
          switch(key[2]) {
            case '\0':
              return LuaSTG::GameObjectMember::VY;
          }
          break;
      }
      break;
    case 'w':
      switch(key[1]) {
        case 'o':
          switch(key[2]) {
            case 'r':
              switch(key[3]) {
                case 'l':
                  switch(key[4]) {
                    case 'd':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::GameObjectMember::WORLD;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'x':
      switch(key[1]) {
        case '\0':
          return LuaSTG::GameObjectMember::X;
      }
      break;
    case 'y':
      switch(key[1]) {
        case '\0':
          return LuaSTG::GameObjectMember::Y;
      }
      break;
  }
  return LuaSTG::GameObjectMember::__NOT_FOUND;
}

LuaSTG::BlendModeX LuaSTG::MapBlendModeX(const char* key) {
  switch(key[0]) {
    case 'a':
      switch(key[1]) {
        case 'd':
          switch(key[2]) {
            case 'd':
              switch(key[3]) {
                case '+':
                  switch(key[4]) {
                    case 'a':
                      switch(key[5]) {
                        case 'd':
                          switch(key[6]) {
                            case 'd':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::AddAdd;
                              }
                              break;
                          }
                          break;
                        case 'l':
                          switch(key[6]) {
                            case 'p':
                              switch(key[7]) {
                                case 'h':
                                  switch(key[8]) {
                                    case 'a':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::BlendModeX::AddAlpha;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                    case 'm':
                      switch(key[5]) {
                        case 'a':
                          switch(key[6]) {
                            case 'x':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::AddMax;
                              }
                              break;
                          }
                          break;
                        case 'i':
                          switch(key[6]) {
                            case 'n':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::AddMin;
                              }
                              break;
                          }
                          break;
                        case 'u':
                          switch(key[6]) {
                            case 'l':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::AddMutiply;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                    case 'r':
                      switch(key[5]) {
                        case 'e':
                          switch(key[6]) {
                            case 'v':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::AddRev;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                    case 's':
                      switch(key[5]) {
                        case 'c':
                          switch(key[6]) {
                            case 'r':
                              switch(key[7]) {
                                case 'e':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case 'n':
                                          switch(key[10]) {
                                            case '\0':
                                              return LuaSTG::BlendModeX::AddScreen;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                        case 'u':
                          switch(key[6]) {
                            case 'b':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::AddSub;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'l':
          switch(key[2]) {
            case 'p':
              switch(key[3]) {
                case 'h':
                  switch(key[4]) {
                    case 'a':
                      switch(key[5]) {
                        case '+':
                          switch(key[6]) {
                            case 'b':
                              switch(key[7]) {
                                case 'a':
                                  switch(key[8]) {
                                    case 'l':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::BlendModeX::AlphaBal;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'm':
      switch(key[1]) {
        case 'u':
          switch(key[2]) {
            case 'l':
              switch(key[3]) {
                case '+':
                  switch(key[4]) {
                    case 'a':
                      switch(key[5]) {
                        case 'd':
                          switch(key[6]) {
                            case 'd':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::MulAdd;
                              }
                              break;
                          }
                          break;
                        case 'l':
                          switch(key[6]) {
                            case 'p':
                              switch(key[7]) {
                                case 'h':
                                  switch(key[8]) {
                                    case 'a':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::BlendModeX::MulAlpha;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                    case 'm':
                      switch(key[5]) {
                        case 'a':
                          switch(key[6]) {
                            case 'x':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::MulMax;
                              }
                              break;
                          }
                          break;
                        case 'i':
                          switch(key[6]) {
                            case 'n':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::MulMin;
                              }
                              break;
                          }
                          break;
                        case 'u':
                          switch(key[6]) {
                            case 'l':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::MulMutiply;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                    case 'r':
                      switch(key[5]) {
                        case 'e':
                          switch(key[6]) {
                            case 'v':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::MulRev;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                    case 's':
                      switch(key[5]) {
                        case 'c':
                          switch(key[6]) {
                            case 'r':
                              switch(key[7]) {
                                case 'e':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case 'n':
                                          switch(key[10]) {
                                            case '\0':
                                              return LuaSTG::BlendModeX::MulScreen;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                        case 'u':
                          switch(key[6]) {
                            case 'b':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::BlendModeX::MulSub;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'o':
      switch(key[1]) {
        case 'n':
          switch(key[2]) {
            case 'e':
              switch(key[3]) {
                case '\0':
                  return LuaSTG::BlendModeX::One;
              }
              break;
          }
          break;
      }
      break;
  }
  return LuaSTG::BlendModeX::__NOT_FOUND;
}

LuaSTG::ColorMember LuaSTG::MapColorMember(const char* key) {
  switch(key[0]) {
    case 'A':
      switch(key[1]) {
        case 'H':
          switch(key[2]) {
            case 'S':
              switch(key[3]) {
                case 'V':
                  switch(key[4]) {
                    case '\0':
                      return LuaSTG::ColorMember::f_AHSV;
                  }
                  break;
              }
              break;
          }
          break;
        case 'R':
          switch(key[2]) {
            case 'G':
              switch(key[3]) {
                case 'B':
                  switch(key[4]) {
                    case '\0':
                      return LuaSTG::ColorMember::f_ARGB;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'a':
      switch(key[1]) {
        case '\0':
          return LuaSTG::ColorMember::m_a;
        case 'r':
          switch(key[2]) {
            case 'g':
              switch(key[3]) {
                case 'b':
                  switch(key[4]) {
                    case '\0':
                      return LuaSTG::ColorMember::m_argb;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'b':
      switch(key[1]) {
        case '\0':
          return LuaSTG::ColorMember::m_b;
      }
      break;
    case 'g':
      switch(key[1]) {
        case '\0':
          return LuaSTG::ColorMember::m_g;
      }
      break;
    case 'h':
      switch(key[1]) {
        case '\0':
          return LuaSTG::ColorMember::m_h;
      }
      break;
    case 'r':
      switch(key[1]) {
        case '\0':
          return LuaSTG::ColorMember::m_r;
      }
      break;
    case 's':
      switch(key[1]) {
        case '\0':
          return LuaSTG::ColorMember::m_s;
      }
      break;
    case 'v':
      switch(key[1]) {
        case '\0':
          return LuaSTG::ColorMember::m_v;
      }
      break;
  }
  return LuaSTG::ColorMember::__NOT_FOUND;
}

LuaSTG::RectMember LuaSTG::MapRectMember(const char* key) {
  switch(key[0]) {
    case 'G':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case 'P':
                  switch(key[4]) {
                    case 'o':
                      switch(key[5]) {
                        case 'i':
                          switch(key[6]) {
                            case 'n':
                              switch(key[7]) {
                                case 't':
                                  switch(key[8]) {
                                    case 'I':
                                      switch(key[9]) {
                                        case 'n':
                                          switch(key[10]) {
                                            case 's':
                                              switch(key[11]) {
                                                case 'i':
                                                  switch(key[12]) {
                                                    case 'd':
                                                      switch(key[13]) {
                                                        case 'e':
                                                          switch(key[14]) {
                                                            case '\0':
                                                              return LuaSTG::RectMember::f_GetPointInside;
                                                          }
                                                          break;
                                                      }
                                                      break;
                                                  }
                                                  break;
                                              }
                                              break;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'I':
      switch(key[1]) {
        case 's':
          switch(key[2]) {
            case 'P':
              switch(key[3]) {
                case 'o':
                  switch(key[4]) {
                    case 'i':
                      switch(key[5]) {
                        case 'n':
                          switch(key[6]) {
                            case 't':
                              switch(key[7]) {
                                case 'I':
                                  switch(key[8]) {
                                    case 'n':
                                      switch(key[9]) {
                                        case 's':
                                          switch(key[10]) {
                                            case 'i':
                                              switch(key[11]) {
                                                case 'd':
                                                  switch(key[12]) {
                                                    case 'e':
                                                      switch(key[13]) {
                                                        case '\0':
                                                          return LuaSTG::RectMember::f_IsPointInside;
                                                      }
                                                      break;
                                                  }
                                                  break;
                                              }
                                              break;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'R':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 's':
              switch(key[3]) {
                case 'i':
                  switch(key[4]) {
                    case 'z':
                      switch(key[5]) {
                        case 'e':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::RectMember::f_Resize;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'b':
      switch(key[1]) {
        case '\0':
          return LuaSTG::RectMember::m_b;
      }
      break;
    case 'c':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 'n':
              switch(key[3]) {
                case 't':
                  switch(key[4]) {
                    case 'e':
                      switch(key[5]) {
                        case 'r':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::RectMember::m_center;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'd':
      switch(key[1]) {
        case 'i':
          switch(key[2]) {
            case 'm':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'n':
                      switch(key[5]) {
                        case 's':
                          switch(key[6]) {
                            case 'i':
                              switch(key[7]) {
                                case 'o':
                                  switch(key[8]) {
                                    case 'n':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::RectMember::m_dimension;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'h':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 'i':
              switch(key[3]) {
                case 'g':
                  switch(key[4]) {
                    case 'h':
                      switch(key[5]) {
                        case 't':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::RectMember::m_height;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'l':
      switch(key[1]) {
        case '\0':
          return LuaSTG::RectMember::m_l;
        case 'b':
          switch(key[2]) {
            case '\0':
              return LuaSTG::RectMember::m_lb;
          }
          break;
        case 't':
          switch(key[2]) {
            case '\0':
              return LuaSTG::RectMember::m_lt;
          }
          break;
      }
      break;
    case 'r':
      switch(key[1]) {
        case '\0':
          return LuaSTG::RectMember::m_r;
        case 'a':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case 'i':
                  switch(key[4]) {
                    case 'o':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::RectMember::m_ratio;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
        case 'b':
          switch(key[2]) {
            case '\0':
              return LuaSTG::RectMember::m_rb;
          }
          break;
        case 't':
          switch(key[2]) {
            case '\0':
              return LuaSTG::RectMember::m_rt;
          }
          break;
      }
      break;
    case 't':
      switch(key[1]) {
        case '\0':
          return LuaSTG::RectMember::m_t;
      }
      break;
    case 'w':
      switch(key[1]) {
        case 'i':
          switch(key[2]) {
            case 'd':
              switch(key[3]) {
                case 't':
                  switch(key[4]) {
                    case 'h':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::RectMember::m_width;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
  }
  return LuaSTG::RectMember::__NOT_FOUND;
}

LuaSTG::Vector2Member LuaSTG::MapVector2Member(const char* key) {
  switch(key[0]) {
    case 'A':
      switch(key[1]) {
        case 'n':
          switch(key[2]) {
            case 'g':
              switch(key[3]) {
                case 'l':
                  switch(key[4]) {
                    case 'e':
                      switch(key[5]) {
                        case '\0':
                          return LuaSTG::Vector2Member::f_Angle;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'D':
      switch(key[1]) {
        case 'o':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case '\0':
                  return LuaSTG::Vector2Member::f_Dot;
              }
              break;
          }
          break;
      }
      break;
    case 'L':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 'n':
              switch(key[3]) {
                case 'g':
                  switch(key[4]) {
                    case 't':
                      switch(key[5]) {
                        case 'h':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::Vector2Member::f_Length;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'N':
      switch(key[1]) {
        case 'o':
          switch(key[2]) {
            case 'r':
              switch(key[3]) {
                case 'm':
                  switch(key[4]) {
                    case 'a':
                      switch(key[5]) {
                        case 'l':
                          switch(key[6]) {
                            case 'i':
                              switch(key[7]) {
                                case 'z':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::Vector2Member::f_Normalize;
                                        case 'd':
                                          switch(key[10]) {
                                            case '\0':
                                              return LuaSTG::Vector2Member::f_Normalized;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'x':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector2Member::m_x;
      }
      break;
    case 'y':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector2Member::m_y;
      }
      break;
  }
  return LuaSTG::Vector2Member::__NOT_FOUND;
}

LuaSTG::Vector3Member LuaSTG::MapVector3Member(const char* key) {
  switch(key[0]) {
    case 'D':
      switch(key[1]) {
        case 'o':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case '\0':
                  return LuaSTG::Vector3Member::f_Dot;
              }
              break;
          }
          break;
      }
      break;
    case 'L':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 'n':
              switch(key[3]) {
                case 'g':
                  switch(key[4]) {
                    case 't':
                      switch(key[5]) {
                        case 'h':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::Vector3Member::f_Length;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'N':
      switch(key[1]) {
        case 'o':
          switch(key[2]) {
            case 'r':
              switch(key[3]) {
                case 'm':
                  switch(key[4]) {
                    case 'a':
                      switch(key[5]) {
                        case 'l':
                          switch(key[6]) {
                            case 'i':
                              switch(key[7]) {
                                case 'z':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::Vector3Member::f_Normalize;
                                        case 'd':
                                          switch(key[10]) {
                                            case '\0':
                                              return LuaSTG::Vector3Member::f_Normalized;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'x':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector3Member::m_x;
      }
      break;
    case 'y':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector3Member::m_y;
      }
      break;
    case 'z':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector3Member::m_z;
      }
      break;
  }
  return LuaSTG::Vector3Member::__NOT_FOUND;
}

LuaSTG::Vector4Member LuaSTG::MapVector4Member(const char* key) {
  switch(key[0]) {
    case 'D':
      switch(key[1]) {
        case 'o':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case '\0':
                  return LuaSTG::Vector4Member::f_Dot;
              }
              break;
          }
          break;
      }
      break;
    case 'L':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 'n':
              switch(key[3]) {
                case 'g':
                  switch(key[4]) {
                    case 't':
                      switch(key[5]) {
                        case 'h':
                          switch(key[6]) {
                            case '\0':
                              return LuaSTG::Vector4Member::f_Length;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'N':
      switch(key[1]) {
        case 'o':
          switch(key[2]) {
            case 'r':
              switch(key[3]) {
                case 'm':
                  switch(key[4]) {
                    case 'a':
                      switch(key[5]) {
                        case 'l':
                          switch(key[6]) {
                            case 'i':
                              switch(key[7]) {
                                case 'z':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::Vector4Member::f_Normalize;
                                        case 'd':
                                          switch(key[10]) {
                                            case '\0':
                                              return LuaSTG::Vector4Member::f_Normalized;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'w':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector4Member::m_w;
      }
      break;
    case 'x':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector4Member::m_x;
      }
      break;
    case 'y':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector4Member::m_y;
      }
      break;
    case 'z':
      switch(key[1]) {
        case '\0':
          return LuaSTG::Vector4Member::m_z;
      }
      break;
  }
  return LuaSTG::Vector4Member::__NOT_FOUND;
}

LuaSTG::Matrix2Member LuaSTG::MapMatrix2Member(const char* key) {
  switch(key[0]) {
    case 'D':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case 'm':
                          switch(key[6]) {
                            case 'i':
                              switch(key[7]) {
                                case 'n':
                                  switch(key[8]) {
                                    case 'a':
                                      switch(key[9]) {
                                        case 'n':
                                          switch(key[10]) {
                                            case 't':
                                              switch(key[11]) {
                                                case '\0':
                                                  return LuaSTG::Matrix2Member::f_Determinant;
                                              }
                                              break;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'I':
      switch(key[1]) {
        case 'n':
          switch(key[2]) {
            case 'v':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case 's':
                          switch(key[6]) {
                            case 'e':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::Matrix2Member::f_Inverse;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'T':
      switch(key[1]) {
        case 'r':
          switch(key[2]) {
            case 'a':
              switch(key[3]) {
                case 'n':
                  switch(key[4]) {
                    case 's':
                      switch(key[5]) {
                        case 'p':
                          switch(key[6]) {
                            case 'o':
                              switch(key[7]) {
                                case 's':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::Matrix2Member::f_Transpose;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
  }
  return LuaSTG::Matrix2Member::__NOT_FOUND;
}

LuaSTG::Matrix3Member LuaSTG::MapMatrix3Member(const char* key) {
  switch(key[0]) {
    case 'D':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case 'm':
                          switch(key[6]) {
                            case 'i':
                              switch(key[7]) {
                                case 'n':
                                  switch(key[8]) {
                                    case 'a':
                                      switch(key[9]) {
                                        case 'n':
                                          switch(key[10]) {
                                            case 't':
                                              switch(key[11]) {
                                                case '\0':
                                                  return LuaSTG::Matrix3Member::f_Determinant;
                                              }
                                              break;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'I':
      switch(key[1]) {
        case 'n':
          switch(key[2]) {
            case 'v':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case 's':
                          switch(key[6]) {
                            case 'e':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::Matrix3Member::f_Inverse;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'T':
      switch(key[1]) {
        case 'r':
          switch(key[2]) {
            case 'a':
              switch(key[3]) {
                case 'n':
                  switch(key[4]) {
                    case 's':
                      switch(key[5]) {
                        case 'p':
                          switch(key[6]) {
                            case 'o':
                              switch(key[7]) {
                                case 's':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::Matrix3Member::f_Transpose;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
  }
  return LuaSTG::Matrix3Member::__NOT_FOUND;
}

LuaSTG::Matrix4Member LuaSTG::MapMatrix4Member(const char* key) {
  switch(key[0]) {
    case 'D':
      switch(key[1]) {
        case 'e':
          switch(key[2]) {
            case 't':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case 'm':
                          switch(key[6]) {
                            case 'i':
                              switch(key[7]) {
                                case 'n':
                                  switch(key[8]) {
                                    case 'a':
                                      switch(key[9]) {
                                        case 'n':
                                          switch(key[10]) {
                                            case 't':
                                              switch(key[11]) {
                                                case '\0':
                                                  return LuaSTG::Matrix4Member::f_Determinant;
                                              }
                                              break;
                                          }
                                          break;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'I':
      switch(key[1]) {
        case 'n':
          switch(key[2]) {
            case 'v':
              switch(key[3]) {
                case 'e':
                  switch(key[4]) {
                    case 'r':
                      switch(key[5]) {
                        case 's':
                          switch(key[6]) {
                            case 'e':
                              switch(key[7]) {
                                case '\0':
                                  return LuaSTG::Matrix4Member::f_Inverse;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
    case 'T':
      switch(key[1]) {
        case 'r':
          switch(key[2]) {
            case 'a':
              switch(key[3]) {
                case 'n':
                  switch(key[4]) {
                    case 's':
                      switch(key[5]) {
                        case 'p':
                          switch(key[6]) {
                            case 'o':
                              switch(key[7]) {
                                case 's':
                                  switch(key[8]) {
                                    case 'e':
                                      switch(key[9]) {
                                        case '\0':
                                          return LuaSTG::Matrix4Member::f_Transpose;
                                      }
                                      break;
                                  }
                                  break;
                              }
                              break;
                          }
                          break;
                      }
                      break;
                  }
                  break;
              }
              break;
          }
          break;
      }
      break;
  }
  return LuaSTG::Matrix4Member::__NOT_FOUND;
}

